<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test School Packs</title>
    <link rel="stylesheet" href="/styles.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
$(document).ready(function () {
    const MIN_QUANTITY = 0;
    const MAX_QUANTITY = 100000000;
    let cart = [];
    let originalCart = JSON.parse(JSON.stringify(cart));
    const MIN_RECEIPT_HEIGHT = 100;
    const MAX_RECEIPT_HEIGHT = 400; // Max height for the receipt container for scrolling

    function log(message) {
        console.log(message);
    }

    function logCart() {
        log("Current cart state: " + JSON.stringify(cart, null, 2));
    }

    function updateCartCounter() {
        const totalItems = cart.reduce((acc, item) => acc + item.quantity, 0);
        const $badge = $(".cart-badge");
        if (totalItems > 0) {
            $badge.text(totalItems).show();
        } else {
            $badge.hide();
        }
    }

    function ensureNumeric(value) {
        value = Number(value);
        return Number.isNaN(value) ? 0 : value;
    }

    function validateQuantity(quantity) {
        return Math.min(Math.max(quantity, MIN_QUANTITY), MAX_QUANTITY);
    }

    function updateReceipt() {
        const $receipt = $(".receipt ul");
        $receipt.empty();
        let total = 0;

        // Adding PACK and QUANTITY details
        cart.forEach(item => {
            const lineTotal = item.price * item.quantity;
            total += lineTotal;
            $receipt.append(`
                <li class="pack-detail">
                    <span class="pack-label"><strong>PACK:</strong> ${item.grade}</span>
                    <span class="quantity-label"><strong>QUANTITY:</strong> ${item.quantity}</span>
                </li>
            `);
        });

        // Update the total after computing it
        $(".total strong").text(`TOTAL: R${total.toFixed(2)}`);
        adjustReceiptPlaceholder();
    }

    function adjustReceiptPlaceholder() {
        setTimeout(function () {
            const receiptHeight = $(".checkout-container").outerHeight();
            $(".receipt-placeholder").height(Math.max(receiptHeight, MIN_RECEIPT_HEIGHT));
        }, 100);
    }

    function updateBadge($num, quantity) {
        $num.closest(".pack-card").find(".card-badge").text(quantity);
    }

    function attachClickHandlers() {
        $(".inc").off("click").on("click", function (e) {
            e.stopPropagation();
            const $num = $(this).siblings(".num");
            const $card = $num.closest(".pack-card");
            let quantity = ensureNumeric($num.data('quantity'));
            quantity = validateQuantity(quantity + 1);
            $num.data('quantity', quantity).text(quantity);
            updateBadge($num, quantity);

            const grade = $card.find(".grade-text").text().trim();
            const type = $card.data("type");
            const price = parseFloat($card.find(".price-text").text().split(' ')[2]);

            const existingItem = cart.find(item => item.grade === grade && item.type === type);
            if (existingItem) {
                existingItem.quantity = quantity;
            } else {
                cart.push({
                    grade: grade,
                    type: type,
                    quantity: quantity,
                    price: price
                });
            }

            logCart();
            updateCartCounter();
            updateReceipt();
        });

        $(".dec").off("click").on("click", function (e) {
            e.stopPropagation();
            const $num = $(this).siblings(".num");
            const $card = $num.closest(".pack-card");
            let quantity = ensureNumeric($num.data('quantity'));
            quantity = validateQuantity(quantity - 1);
            $num.data('quantity', quantity).text(quantity);
            updateBadge($num, quantity);

            const grade = $card.find(".grade-text").text().trim();
            const type = $card.data("type");
            const price = parseFloat($card.find(".price-text").text().split(' ')[2]);

            const existingItem = cart.find(item => item.grade === grade && item.type === type);
            if (existingItem) {
                existingItem.quantity = quantity;
                if (quantity === 0) {
                    cart = cart.filter(item => !(item.grade === grade && item.type === type));
                }
            } else if (quantity > 0) {
                cart.push({
                    grade: grade,
                    type: type,
                    quantity: quantity,
                    price: price
                });
            }

            logCart();
            updateCartCounter();
            updateReceipt();
        });

        $(".clear-order").off("click").on("click", function () {
            cart = JSON.parse(JSON.stringify(originalCart));
            updateCartCounter();
            updateReceipt();
            restoreInitialQuantities();
        });

        $(".num").on("keydown", function (event) {
            event.preventDefault();
        });
    }

    $(".pack-card").off("click");

    function initializeQuantities() {
        $(".num").each(function () {
            const $this = $(this);
            $this.data('quantity', MIN_QUANTITY);
            $this.text(MIN_QUANTITY);
            $this.closest(".pack-card").find(".card-badge").text(MIN_QUANTITY);
        });
    }

    function restoreInitialQuantities() {
        $(".num").each(function () {
            const $this = $(this);
            const initialQuantity = MIN_QUANTITY;
            $this.data('quantity', initialQuantity).text(initialQuantity);
            $this.closest(".pack-card").find(".card-badge").text(initialQuantity);
        });
    }

    initializeQuantities();
    attachClickHandlers();

    // Adjust placeholder size on window resize
    $(window).on('resize', adjustReceiptPlaceholder);

    // Initialize placeholder size on load
    adjustReceiptPlaceholder();
    // Also adjust after initial rendering
    $(window).on('load', adjustReceiptPlaceholder);
});
</script>
</head>
<body>
    <h1><%= school.name %> Packs</h1>
    <ul class="pack-list">
        <% school.packs.forEach(pack => { %>
            <li class="pack-card" data-type="<%= pack.type %>" data-url="/grades?schoolId=<%= school.id %>">
                <div class="grade-text">
                    <%= Array.isArray(pack.grades) ? pack.grades.join('<br>') : pack.grades %>
                </div>
                <div class="image-container">
                    <img src="<%= school.logo %>" alt="<%= school.name %> Logo">
                </div>
                <span class="card-badge">1</span>
                <div class="pack-options">
                    <% if (Array.isArray(pack.packs)) { %>
                        <% pack.packs.forEach(subPack => { %>
                            <div class="price-wrapper">
                                <span class="price-text">
                                    <%= subPack.type.charAt(0).toUpperCase() + subPack.type.slice(1) %> Pack: <%= subPack.price %>
                                </span>
                            </div>
                            <div class="crtdiv">
                                <span class="qty">
                                    <span class="dec"><i class="fa fa-minus-square" aria-hidden="true"></i></span>
                                    <span class="num">1</span>
                                    <span class="inc"><i class="fa fa-plus-square" aria-hidden="true"></i></span>
                                </span>
                            </div>
                        <% }) %>
                    <% } else { %>
                        <div class="price-wrapper">
                            <span class="price-text"><strong>PRICE: <%= pack.price %></strong></span>
                        </div>
                        <div class="crtdiv">
                            <span class="qty">
                                <span class="dec"><i class="fa fa-minus-square" aria-hidden="true"></i></span>
                                <span class="num">1</span>
                                <span class="inc"><i class="fa fa-plus-square" aria-hidden="true"></i></span>
                            </span>
                        </div>
                    <% } %>
                </div>
            </li>
        <% }); %>
    </ul>

    <!-- Checkout Container -->
    <div class="checkout-container">
        <div class="receipt">

            <!-- Placing total above other items -->
            <h2><u>Your Order Total:</u></h2>
            <div class="total">
                <strong>TOTAL: R0.00</strong>
            </div>

            <ul></ul>
            <div class="clear-order-container">
                <button class="clear-order">Clear Order</button>
            </div>
        </div>
    </div>

    <!-- Placeholder to push content above the receipt -->
    <div class="receipt-placeholder"></div>
</body>
</html>